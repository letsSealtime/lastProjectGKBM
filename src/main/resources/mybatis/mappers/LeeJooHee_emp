<!--   상품정보관리 페이징된 목록   -->
<select id="fulltable_2" parameterType="skuDTO" resultType="skuDTO">
SELECT * FROM ( SELECT p.*, ROW_NUMBER() OVER (ORDER BY sku_id DESC) AS rn FROM p_sku p
<where>
<if test="searchKeyword != null and searchKeyword != ''"> AND ( UPPER(sku_code) LIKE UPPER('%' || #{searchKeyword} || '%') OR UPPER(sku_name) LIKE UPPER('%' || #{searchKeyword} || '%') )</if>
</where>
) WHERE rn BETWEEN #{startRow} AND #{endRow}
</select>
<!--   상품정보관리 조건에 맞는 전체 데이터 수 가져오기   -->
<select id="Count_2" parameterType="skuDTO" resultType="int">
SELECT COUNT(*) FROM p_sku
<where>
<if test="searchKeyword != null and searchKeyword != ''"> AND ( UPPER(sku_code) LIKE UPPER('%' || #{searchKeyword} || '%') OR UPPER(sku_name) LIKE UPPER('%' || #{searchKeyword} || '%') )</if>
</where>
</select>
<!--   상품정보관리 등록   -->
<insert id="addition_2" parameterType="skuDTO"> insert into p_sku VALUES (seq_p_sku.nextval, #{sku_code}, #{sku_name}, #{sku_size}, #{vendor_name}, #{price}, SYSDATE, #{modify_date}, #{sku_category}) </insert>
<!--   상품정보관리 삭제   -->
<delete id="delete_2" parameterType="skuDTO"> delete from p_sku where sku_id = #{sku_id} </delete>
<!--   상품정보관리 수정   -->
<update id="udpate_2" parameterType="skuDTO"> update p_sku set sku_code = #{sku_code}, sku_name = #{sku_name}, sku_size = #{sku_size}, vendor_name = #{vendor_name}, price = #{price}, modify_date = SYSDATE, sku_category = #{sku_category} where sku_id = #{sku_id} </update>
<!--   원자재입고관리   -->
<!--   원자재입고 페이징된 목록   -->
<select id="fulltable_2_1" parameterType="mioDTO" resultType="mioDTO">
SELECT * FROM ( SELECT pmio.*, ps.sku_code, ps.sku_name, ps.sku_size, ROW_NUMBER() OVER (ORDER BY pmio.ib_id DESC) AS rn FROM P_MATERIAL_IN_OUT pmio LEFT JOIN P_SKU ps ON pmio.sku_id = ps.sku_id
<where>
pmio.sku_type = 'In'
<if test="searchKeyword != null and searchKeyword != ''"> AND ( UPPER(ps.sku_code) LIKE UPPER('%' || #{searchKeyword} || '%') OR UPPER(ps.sku_name) LIKE UPPER('%' || #{searchKeyword} || '%') ) </if>
</where>
) WHERE rn BETWEEN #{startRow} AND #{endRow}
</select>
<!--   원자재입고관리 전체 데이터 수 조회   -->
<select id="Count_2_1" parameterType="mioDTO" resultType="int">
SELECT COUNT(*) FROM P_MATERIAL_IN_OUT pmio LEFT JOIN P_SKU ps ON pmio.sku_id = ps.sku_id
<where>
pmio.sku_type = 'In'
<if test="searchKeyword != null and searchKeyword != ''"> AND ( UPPER(ps.sku_code) LIKE UPPER('%' || #{searchKeyword} || '%') OR UPPER(ps.sku_name) LIKE UPPER('%' || #{searchKeyword} || '%') ) </if>
</where>
</select>
<!--   원자재입고관리 등록   -->
<insert id="addition_2_1" parameterType="mioDTO"> insert into p_material_in_out VALUES (seq_p_material_in_out.nextval, #{material_count}, #{material_price}, #{sku_type}, SYSDATE, #{modify_date}, #{remarks}, #{sku_id}, #{bill_id}) </insert>
<!--   원자재입고관리 삭제   -->
<delete id="delete_2_1" parameterType="mioDTO"> delete from p_material_in_out where ib_id = #{ib_id} </delete>
<!--   원자재입고관리 수정   -->
<update id="udpate_2_1" parameterType="mioDTO"> update p_material_in_out set material_count = #{material_count}, material_price = #{material_price}, sku_type = #{sku_type}, remarks = #{remarks}, modify_date = SYSDATE, sku_id = #{sku_id}, bill_id = #{bill_id} where ib_id = #{ib_id} </update>
<!--   원자재출고관리 페이징된 목록   -->
<select id="fulltable_2_2" parameterType="mioDTO2" resultType="mioDTO">
SELECT * FROM ( SELECT pmio.*, ps.sku_code, ps.sku_name, ps.sku_size, ROW_NUMBER() OVER (ORDER BY pmio.ib_id DESC) AS rn FROM P_MATERIAL_IN_OUT pmio LEFT JOIN P_SKU ps ON pmio.sku_id = ps.sku_id
<where>
pmio.sku_type = 'Out'
<if test="searchKeyword != null and searchKeyword != ''"> AND ( UPPER(ps.sku_code) LIKE UPPER('%' || #{searchKeyword} || '%') OR UPPER(ps.sku_name) LIKE UPPER('%' || #{searchKeyword} || '%') ) </if>
</where>
) WHERE rn BETWEEN #{startRow} AND #{endRow}
</select>
<!--   원자재출고관리 전체 데이터 수 조회   -->
<select id="Count_2_2" parameterType="mioDTO2" resultType="int">
SELECT COUNT(*) FROM P_MATERIAL_IN_OUT pmio LEFT JOIN P_SKU ps ON pmio.sku_id = ps.sku_id
<where>
pmio.sku_type = 'Out'
<if test="searchKeyword != null and searchKeyword != ''"> AND ( UPPER(ps.sku_code) LIKE UPPER('%' || #{searchKeyword} || '%') OR UPPER(ps.sku_name) LIKE UPPER('%' || #{searchKeyword} || '%') ) </if>
</where>
</select>
<!--   원자재출고관리 등록   -->
<insert id="addition_2_2" parameterType="mioDTO2"> insert into p_material_in_out VALUES (seq_p_material_in_out.nextval, #{material_count}, #{material_price}, #{sku_type}, SYSDATE, #{modify_date}, #{remarks}, #{sku_id}, #{bill_id}) </insert>
<!--   원자재출고관리 삭제   -->
<delete id="delete_2_2" parameterType="mioDTO2"> delete from p_material_in_out where ib_id = #{ib_id} </delete>
<!--   원자재출고관리 수정   -->
<update id="udpate_2_2" parameterType="mioDTO2"> update p_material_in_out set material_count = #{material_count}, material_price = #{material_price}, sku_type = #{sku_type}, remarks = #{remarks}, modify_date = SYSDATE, sku_id = #{sku_id}, bill_id = #{bill_id} where ib_id = #{ib_id} </update>
<!--   원자재현황 페이징된 목록   -->
<select id="fulltable_2_3" parameterType="mioDTO3" resultType="mioDTO">
SELECT * FROM ( SELECT pmio.*, ps.sku_code, ps.sku_name, ps.sku_size, ROW_NUMBER() OVER (ORDER BY pmio.ib_id DESC) AS rn FROM P_MATERIAL_IN_OUT pmio LEFT JOIN P_SKU ps ON pmio.sku_id = ps.sku_id
<where>
<if test="searchKeyword != null and searchKeyword != ''"> AND ( UPPER(ps.sku_code) LIKE UPPER('%' || #{searchKeyword} || '%') OR UPPER(ps.sku_name) LIKE UPPER('%' || #{searchKeyword} || '%') ) </if>
</where>
) WHERE rn BETWEEN #{startRow} AND #{endRow}
</select>
<!--   원자재현황 전체 데이터 수 조회   -->
<select id="Count_2_3" parameterType="mioDTO3" resultType="int">
SELECT COUNT(*) FROM P_MATERIAL_IN_OUT pmio LEFT JOIN P_SKU ps ON pmio.sku_id = ps.sku_id
<where>
<if test="searchKeyword != null and searchKeyword != ''"> AND ( UPPER(ps.sku_code) LIKE UPPER('%' || #{searchKeyword} || '%') OR UPPER(ps.sku_name) LIKE UPPER('%' || #{searchKeyword} || '%') ) </if>
</where>
</select>
<!--   완제품입고관리 페이징된 목록   -->
<select id="fulltable_2_4" parameterType="pioDTO" resultType="pioDTO">
SELECT * FROM ( SELECT pmio.*, ps.sku_code, ps.sku_name, ps.sku_size, ROW_NUMBER() OVER (ORDER BY pmio.ib_id DESC) AS rn FROM P_PRODUCT_IN_OUT pmio LEFT JOIN P_SKU ps ON pmio.sku_id = ps.sku_id
<where>
pmio.sku_type = 'In'
<if test="searchKeyword != null and searchKeyword != ''"> AND ( UPPER(ps.sku_code) LIKE UPPER('%' || #{searchKeyword} || '%') OR UPPER(ps.sku_name) LIKE UPPER('%' || #{searchKeyword} || '%') ) </if>
</where>
) WHERE rn BETWEEN #{startRow} AND #{endRow}
</select>
<!--   완제품입고관리 전체 데이터 수 조회   -->
<select id="Count_2_4" parameterType="pioDTO" resultType="int">
SELECT COUNT(*) FROM P_PRODUCT_IN_OUT pmio LEFT JOIN P_SKU ps ON pmio.sku_id = ps.sku_id
<where>
pmio.sku_type = 'In'
<if test="searchKeyword != null and searchKeyword != ''"> AND ( UPPER(ps.sku_code) LIKE UPPER('%' || #{searchKeyword} || '%') OR UPPER(ps.sku_name) LIKE UPPER('%' || #{searchKeyword} || '%') ) </if>
</where>
</select>
<!--   완제품입고관리 등록   -->
<insert id="addition_2_4" parameterType="pioDTO"> insert into P_PRODUCT_IN_OUT VALUES (SEQ_P_PRODUCT_IN_OUT.nextval, #{product_count}, #{product_price}, #{sku_type}, SYSDATE, #{modify_date}, #{remarks}, #{sku_id}, #{empno}) </insert>
<!--   완제품입고관리 삭제   -->
<delete id="delete_2_4" parameterType="pioDTO"> delete from P_PRODUCT_IN_OUT where ib_id = #{ib_id} </delete>
<!--   완제품입고관리 수정   -->
<update id="udpate_2_4" parameterType="pioDTO"> update P_PRODUCT_IN_OUT set product_count = #{product_count}, product_price = #{product_price}, sku_type = #{sku_type}, remarks = #{remarks}, modify_date = SYSDATE, sku_id = #{sku_id}, empno = #{empno} where ib_id = #{ib_id} </update>
<!--   완제품출고관리 페이징된 목록   -->
<select id="fulltable_2_5" parameterType="pioDTO2" resultType="pioDTO">
SELECT * FROM ( SELECT pmio.*, ps.sku_code, ps.sku_name, ps.sku_size, ROW_NUMBER() OVER (ORDER BY pmio.ib_id DESC) AS rn FROM P_PRODUCT_IN_OUT pmio LEFT JOIN P_SKU ps ON pmio.sku_id = ps.sku_id
<where>
pmio.sku_type = 'Out'
<if test="searchKeyword != null and searchKeyword != ''"> AND ( UPPER(ps.sku_code) LIKE UPPER('%' || #{searchKeyword} || '%') OR UPPER(ps.sku_name) LIKE UPPER('%' || #{searchKeyword} || '%') ) </if>
</where>
) WHERE rn BETWEEN #{startRow} AND #{endRow}
</select>
<!--   완제품출고관리 전체 데이터 수 조회   -->
<select id="Count_2_5" parameterType="pioDTO2" resultType="int">
SELECT COUNT(*) FROM P_PRODUCT_IN_OUT pmio LEFT JOIN P_SKU ps ON pmio.sku_id = ps.sku_id
<where>
pmio.sku_type = 'Out'
<if test="searchKeyword != null and searchKeyword != ''"> AND ( UPPER(ps.sku_code) LIKE UPPER('%' || #{searchKeyword} || '%') OR UPPER(ps.sku_name) LIKE UPPER('%' || #{searchKeyword} || '%') ) </if>
</where>
</select>
<!--   완제품출고관리 등록   -->
<insert id="addition_2_5" parameterType="pioDTO2"> insert into P_PRODUCT_IN_OUT VALUES (SEQ_P_PRODUCT_IN_OUT.nextval, #{product_count}, #{product_price}, #{sku_type}, SYSDATE, #{modify_date}, #{remarks}, #{sku_id}, #{empno}) </insert>
<!--   완제품출고관리 삭제   -->
<delete id="delete_2_5" parameterType="pioDTO2"> delete from P_PRODUCT_IN_OUT where ib_id = #{ib_id} </delete>
<!--   완제품출고관리 수정   -->
<update id="udpate_2_5" parameterType="pioDTO2"> update P_PRODUCT_IN_OUT set product_count = #{product_count}, product_price = #{product_price}, sku_type = #{sku_type}, remarks = #{remarks}, modify_date = SYSDATE, sku_id = #{sku_id}, empno = #{empno} where ib_id = #{ib_id} </update>
<!--   작업표준서 페이징된 목록   -->
<select id="fulltable_2_6" parameterType="wmDTO" resultType="wmDTO">
SELECT * FROM ( SELECT pmio.*, ps.sku_code, ps.sku_name, ps.sku_size, ROW_NUMBER() OVER (ORDER BY pmio.work_method DESC) AS rn FROM P_work_method pmio LEFT JOIN P_SKU ps ON pmio.sku_id = ps.sku_id
<where>
<if test="searchKeyword != null and searchKeyword != ''"> AND ( UPPER(ps.sku_code) LIKE UPPER('%' || #{searchKeyword} || '%') OR UPPER(ps.sku_name) LIKE UPPER('%' || #{searchKeyword} || '%') ) </if>
</where>
) WHERE rn BETWEEN #{startRow} AND #{endRow}
</select>
<!--   작업표준서 전체 데이터 수 조회   -->
<select id="Count_2_6" parameterType="wmDTO" resultType="int">
SELECT COUNT(*) FROM P_work_method pmio LEFT JOIN P_SKU ps ON pmio.sku_id = ps.sku_id
<where>
<if test="searchKeyword != null and searchKeyword != ''"> AND ( UPPER(ps.sku_code) LIKE UPPER('%' || #{searchKeyword} || '%') OR UPPER(ps.sku_name) LIKE UPPER('%' || #{searchKeyword} || '%') ) </if>
</where>
</select>
<!--   작업표준서 등록   -->
<insert id="addition_2_6" parameterType="wmDTO"> insert into P_work_method VALUES (seq_p_work_method.nextval, #{work}, #{consumption}, #{sku_id}, #{work_file}, SYSDATE, #{modify_date}) </insert>
<!--   작업표준서 삭제   -->
<delete id="delete_2_6" parameterType="wmDTO"> delete from P_work_method where work_method = #{work_method} </delete>
<!--   작업표준서 수정   -->
<update id="udpate_2_6" parameterType="wmDTO"> update P_work_method set work = #{work}, consumption = #{consumption}, sku_id = #{sku_id}, work_file = #{work_file}, modify_date = SYSDATE where work_method = #{work_method} </update>
<!--   BOM 페이징 목록   -->
<select id="fulltable_2_7" parameterType="bDTO" resultType="bDTO">
SELECT * FROM ( SELECT pb.*, ps.sku_code, ps.sku_name, ps.sku_size, pwm.work, pwm.work_file, ROW_NUMBER() OVER (ORDER BY pb.bom_id DESC) AS rn FROM p_bom pb LEFT JOIN p_sku ps ON pb.sku_id = ps.sku_id LEFT JOIN p_work_method pwm ON pb.work_method = pwm.work_method
<where>
<if test="searchKeyword != null and searchKeyword != ''"> AND ( UPPER(ps.sku_code) LIKE UPPER('%' || #{searchKeyword} || '%') OR UPPER(ps.sku_name) LIKE UPPER('%' || #{searchKeyword} || '%') ) </if>
</where>
) WHERE rn BETWEEN #{startRow} AND #{endRow}
</select>
<!--   BOM 데이터 수 조회   -->
<select id="Count_2_7" parameterType="bDTO" resultType="int">
SELECT COUNT(*) FROM p_bom pb LEFT JOIN p_sku ps ON pb.sku_id = ps.sku_id LEFT JOIN p_work_method pwm ON pb.work_method = pwm.work_method
<where>
<if test="searchKeyword != null and searchKeyword != ''"> AND ( UPPER(ps.sku_code) LIKE UPPER('%' || #{searchKeyword} || '%') OR UPPER(ps.sku_name) LIKE UPPER('%' || #{searchKeyword} || '%') ) </if>
</where>
</select>
<!--   bom 등록   -->
<insert id="addition_2_7" parameterType="bDTO"> insert into p_bom VALUES (seq_p_bom.nextval, #{sku_id_material}, #{consumption}, #{sku_id}, #{work_method}, SYSDATE, #{modify_date}) </insert>
<!--   bom 삭제   -->
<delete id="delete_2_7" parameterType="bDTO"> delete from p_bom where bom_id = #{bom_id} </delete>
<!--   bom 수정   -->
<update id="udpate_2_7" parameterType="bDTO"> update p_bom set sku_id_material = #{sku_id_material}, consumption = #{consumption}, sku_id = #{sku_id}, work_method = #{work_method}, modify_date = SYSDATE where bom_id = #{bom_id} </update>