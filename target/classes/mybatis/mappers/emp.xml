<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gkbm.emp">

	<!-- 최수완 -->

	<!-- VENDOR 전체 조회 -->
	<select id="selectVendorAll_1"
		resultType="kr.or.GKBM.vendor.VendorDTO">

		SELECT COUNT(*) AS line
		FROM P_VENDOR

	</select>

	<!-- 페이징 전체 조회 -->
	<select id="selectVendor_All_1"
		parameterType="kr.or.GKBM.vendor.VendorDTO"
		resultType="kr.or.GKBM.vendor.VendorDTO">

		SELECT RNUM, c_c, c_n, c_m, c_p, c_a, c_i
		FROM ( SELECT ROWNUM AS
		RNUM,
		c_c, c_n, c_m, c_p, c_a, c_i
		FROM ( SELECT VENDOR_ID AS
		c_c, VENDOR_NAME
		AS c_n, MGR AS c_m,
		VENDOR_PHONE AS c_p, EMAIL AS c_a,
		SKU_ID AS c_i
		FROM P_VENDOR
		ORDER BY c_n))
		WHERE RNUM <![CDATA[ >= ]]>
		${indexStart} AND RNUM <![CDATA[ <= ]]>
		${indexEnd}

	</select>

	<!-- VENDOR 부분 조회 -->
	<select id="selectVendorPart_1"
		parameterType="kr.or.GKBM.vendor.VendorDTO"
		resultType="kr.or.GKBM.vendor.VendorDTO">
		SELECT COUNT(*) AS line
		FROM P_VENDOR
		<where>
			<if test="c_c != null and c_c != ''">
				AND VENDOR_ID = #{c_c}
			</if>
			<if test="c_n != null and c_n != ''">
				AND UPPER(VENDOR_NAME) LIKE '%' || UPPER(#{c_n}) || '%'
			</if>
			<if test="c_m != null and c_m != ''">
				AND UPPER(MGR) LIKE '%' || UPPER(#{c_m}) || '%'
			</if>
			<if test="c_p != null and c_p != ''">
				AND VENDOR_PHONE = #{c_p}
			</if>
			<if test="c_a != null and c_a != ''">
				AND UPPER(EMAIL) LIKE '%' || UPPER(#{c_a}) || '%'
			</if>
			<if test="c_i != null and c_i != ''">
				AND SKU_ID = #{c_i}
			</if>
		</where>

	</select>

	<!-- 페이징 부분 조회 -->
	<select id="selectVendor_Part_1"
		parameterType="kr.or.GKBM.vendor.VendorDTO"
		resultType="kr.or.GKBM.vendor.VendorDTO">
		SELECT RNUM, c_c, c_n, c_m, c_p, c_a, c_i
		FROM (
		SELECT ROWNUM AS RNUM,
		c_c, c_n, c_m, c_p, c_a, c_i
		FROM (
		SELECT
		VENDOR_ID AS c_c,
		VENDOR_NAME
		AS c_n,
		MGR AS c_m,
		VENDOR_PHONE AS c_p,
		EMAIL AS c_a,
		SKU_ID AS c_i
		FROM
		P_VENDOR
		<where>
			<if test="c_c != null and c_c != ''">
				AND VENDOR_ID = #{c_c}
			</if>
			<if test="c_n != null and c_n != ''">
				AND UPPER(VENDOR_NAME) LIKE '%' || UPPER(#{c_n}) || '%'
			</if>
			<if test="c_m != null and c_m != ''">
				AND UPPER(MGR) LIKE '%' || UPPER(#{c_m}) || '%'
			</if>
			<if test="c_p != null and c_p != ''">
				AND VENDOR_PHONE = #{c_p}
			</if>
			<if test="c_a != null and c_a != ''">
				AND UPPER(EMAIL) LIKE '%' || UPPER(#{c_a}) || '%'
			</if>
			<if test="c_i != null and c_i != ''">
				AND SKU_ID = #{c_i}
			</if>
		</where>

		ORDER BY VENDOR_NAME))
		WHERE RNUM <![CDATA[ >= ]]>
		${indexStart}
		AND RNUM <![CDATA[ <= ]]>
		${indexEnd}
	</select>

	<!-- 데이터 기입 -->

	<insert id="insertVendor_1"
		parameterType="kr.or.GKBM.vendor.VendorDTO">

		INSERT INTO P_VENDOR
		VALUES(SEQ.NEXTVAL, #{c_n}, #{c_m},
		#{c_p}, #{c_a}, #{c_i})

	</insert>

	<delete id="deleteVendor_1"
		parameterType="kr.or.GKBM.vendor.VendorDTO">

		DELETE FROM P_VENDOR
		WHERE VENDOR_ID IN
		<foreach item="delete" collection="check" open="(" close=")"
			separator=",">
			#{delete}
		</foreach>

	</delete>

	<update id="updateVendor_1"
		parameterType="kr.or.GKBM.vendor.VendorDTO">

		UPDATE P_VENDOR
		SET VENDOR_NAME = #{c_n},
		MGR = #{c_m},
		VENDOR_PHONE = #{c_p},
		EMAIL = #{c_a},
		SKU_ID = #{c_i}
		WHERE VENDOR_ID =
		#{c_c}

	</update>

	<!-- BILL 전체 조회 -->
	<select id="selectBillAll_1"
		resultType="kr.or.GKBM.bill.BillDTO">

		SELECT COUNT(*) AS line
		FROM P_BILL PB
		LEFT JOIN P_VENDOR PV ON PB.VENDOR_ID = PV.VENDOR_ID

	</select>

	<!-- 페이징 전체 조회 -->
	<select id="selectBill_All_1"
		parameterType="kr.or.GKBM.bill.BillDTO"
		resultType="kr.or.GKBM.bill.BillDTO">

		SELECT RNUM, c_c, c_q, c_p, c_a, c_i, c_d, c_n, c_b, c_j
		FROM ( SELECT ROWNUM AS
		RNUM,
		c_c, c_q, c_p, c_a, c_i, c_d, c_n, c_b, c_j
		FROM ( SELECT PB.BILL_ID AS
		c_c, PB.BILL_COUNT
		AS c_q, PB.PRICE AS c_b,
		PB.STATUS AS c_a, PB.VENDOR_ID AS c_i,
		PB.BILL_DATE AS c_d, PV.VENDOR_NAME AS c_n, PV.VENDOR_PHONE AS c_p,
		PV.EMAIL AS c_j
		FROM P_BILL PB
		LEFT JOIN P_VENDOR PV ON PB.VENDOR_ID = PV.VENDOR_ID
		ORDER BY VENDOR_NAME))
		WHERE RNUM <![CDATA[ >= ]]>
		${indexStart} AND RNUM <![CDATA[ <= ]]>
		${indexEnd}

	</select>

	<!-- BILL 부분 조회 -->
	<select id="selectBillPart_1"
		parameterType="kr.or.GKBM.bill.BillDTO"
		resultType="kr.or.GKBM.bill.BillDTO">
		SELECT COUNT(*) AS line
		FROM P_BILL PB
		LEFT JOIN P_VENDOR PV ON PB.VENDOR_ID = PV.VENDOR_ID
		
		<where>
			<if test="c_d != null and c_d != ''">
				AND BILL_DATE = #{c_d}
			</if>
			<if test="c_c != null and c_c != ''">
				AND BILL_ID = #{c_c}
			</if>
			<if test="c_q != null and c_q != ''">
				AND BILL_COUNT = #{c_q}
			</if>
			<if test="c_b != null and c_b != ''">
				AND PRICE = #{c_b}
			</if>
			<if test="c_a != null and c_a != ''">
				AND STATUS = #{c_a}
			</if>
			<if test="c_i != null and c_i != ''">
				AND VENDOR_ID = #{c_i}
			</if>
			<if test="c_n != null and c_n != ''">
				AND UPPER(MGR) LIKE '%' || UPPER(#{c_n}) || '%'
			</if>
			<if test="c_p != null and c_p != ''">
				AND VENDOR_PHONE = #{c_p}
			</if>
			<if test="c_j != null and c_j != ''">
				AND UPPER(EMAIL) LIKE '%' || UPPER(#{c_j}) || '%'
			</if>
		</where>

	</select>

	<!-- 페이징 부분 조회 -->
	<select id="selectBill_Part_1"
		parameterType="kr.or.GKBM.bill.BillDTO"
		resultType="kr.or.GKBM.bill.BillDTO">
		SELECT RNUM, c_c, c_q, c_p, c_a, c_i, c_d, c_n, c_b, c_j
		FROM ( SELECT ROWNUM AS
		RNUM,
		c_c, c_q, c_p, c_a, c_i, c_d, c_n, c_b, c_j
		FROM ( SELECT PB.BILL_ID AS
		c_c, PB.BILL_COUNT
		AS c_q, PB.PRICE AS c_b,
		PB.STATUS AS c_a, PB.VENDOR_ID AS c_i,
		PB.BILL_DATE AS c_d, PV.VENDOR_NAME AS c_n, PV.VENDOR_PHONE AS c_p,
		PV.EMAIL AS c_j
		FROM P_BILL PB
		LEFT JOIN P_VENDOR PV ON PB.VENDOR_ID = PV.VENDOR_ID
		<where>
			<if test="c_d != null and c_d != ''">
				AND BILL_DATE = #{c_d}
			</if>
			<if test="c_c != null and c_c != ''">
				AND BILL_ID = #{c_c}
			</if>
			<if test="c_q != null and c_q != ''">
				AND BILL_COUNT = #{c_q}
			</if>
			<if test="c_b != null and c_b != ''">
				AND PRICE = #{c_b}
			</if>
			<if test="c_a != null and c_a != ''">
				AND STATUS = #{c_a}
			</if>
			<if test="c_i != null and c_i != ''">
				AND VENDOR_ID = #{c_i}
			</if>
			<if test="c_n != null and c_n != ''">
				AND UPPER(MGR) LIKE '%' || UPPER(#{c_n}) || '%'
			</if>
			<if test="c_p != null and c_p != ''">
				AND VENDOR_PHONE = #{c_p}
			</if>
			<if test="c_j != null and c_j != ''">
				AND UPPER(EMAIL) LIKE '%' || UPPER(#{c_j}) || '%'
			</if>
		</where>
		ORDER BY VENDOR_NAME))
		WHERE RNUM <![CDATA[ >= ]]>
		${indexStart}
		AND RNUM <![CDATA[ <= ]]>
		${indexEnd}
	</select>

	<!-- 데이터 기입 -->

	<insert id="insertBill_1"
		parameterType="kr.or.GKBM.bill.BillDTO">

		INSERT INTO P_BILL
		VALUES(SEQ.NEXTVAL, #{c_q}, #{c_b},
		#{c_a}, #{c_i}, #{c_d})

	</insert>

	<delete id="deleteBill_1"
		parameterType="kr.or.GKBM.bill.BillDTO">

		DELETE FROM P_BILL
		WHERE BILL_ID IN
		<foreach item="delete" collection="check" open="(" close=")"
			separator=",">
			#{check}
		</foreach>

	</delete>

	<update id="updateBill_1"
		parameterType="kr.or.GKBM.bill.BillDTO">

		UPDATE P_BILL
		SET BILL_DATE = #{c_d},
		BILL_COUNT = #{c_q},
		PRICE = #{c_b},
		VENDOR_ID = #{c_i},
		STATUS = #{c_a}
		WHERE BILL._ID = #{c_c}

		UPDATE P_VENDOR
		SET VENDOR_NAME = #{c_n},
		MGR = #{c_m},
		VENDOR_PHONE = #{c_p},
		EMAIL = #{c_a},
		SKU_ID = #{c_i}
		WHERE VENDOR_ID =
		#{c_c}

	</update>
	
	<!-- Week 상품 조회 -->	
	<select id="sku_select" resultType="kr.or.GKBM.week.WeekDTO">
		SELECT SKU_ID AS c_s
		FROM P_SKU
	</select>
	
	<!-- WEEK 전체 조회 -->
	<select id="selectWeekAll_1"
		resultType="kr.or.GKBM.week.WeekDTO">

		SELECT COUNT(*) AS line
		FROM P_WEEK_PLAN PW
		LEFT JOIN P_SKU PS ON PW.SKU_ID = PS.SKU_ID
	</select>

	<!-- 페이징 전체 조회 -->
	<select id="selectWeek_All_1"
		parameterType="kr.or.GKBM.week.WeekDTO"
		resultType="kr.or.GKBM.week.WeekDTO">

		SELECT RNUM, c_i, c_n, c_k, c_c, c_w, c_y
		FROM ( SELECT ROWNUM AS
		RNUM,
		c_i, c_n, c_k, c_c, c_w, c_y
		FROM ( SELECT PW.WEEK_PLAN_ID AS
		c_i, PS.SKU_NAME
		AS c_n, PS.SKU_CODE AS c_k,
		PW.PLAN_COUNT AS c_c, PW.WEEK AS c_w,
		PW.PLAN_YEAR AS c_y
		FROM P_WEEK_PLAN PW
		LEFT JOIN P_SKU PS ON PW.SKU_ID = PS.SKU_ID
		ORDER BY PW.WEEK_PLAN_ID))
		WHERE RNUM <![CDATA[ >= ]]>
		${indexStart} AND RNUM <![CDATA[ <= ]]>
		${indexEnd}

	</select>

	<!-- WEEK 부분 조회 -->
	<select id="selectWeekPart_1"
		parameterType="kr.or.GKBM.week.WeekDTO"
		resultType="kr.or.GKBM.week.WeekDTO">
		SELECT COUNT(*) AS line
		FROM P_WEEK_PLAN PW
		LEFT JOIN P_SKU PS ON PW.SKU_ID = PS.SKU_ID
		<where>
			<if test="c_i != null and c_i != ''">
				AND WEEK_PLAN_ID = #{c_i}
			</if>
			<if test="c_n != null and c_n != ''">
				AND UPPER(SKU_NAME) LIKE '%' || UPPER(#{c_n}) || '%'
			</if>
			<if test="c_k != null and c_k != ''">
				AND UPPER(SKU_CODE) LIKE '%' || UPPER(#{c_k}) || '%'
			</if>
			<if test="c_c != null and c_c != ''">
				AND PLAN_COUNT = #{c_c}
			</if>
			<if test="c_w != null and c_w != ''">
				AND UPPER(WEEK) = #{c_w}
			</if>
			<if test="c_y != null and c_y != ''">
				AND PLAN_YEAR = #{c_y}
			</if>
		</where>

	</select>

	<!-- 페이징 부분 조회 -->
	<select id="selectWeek_Part_1"
		parameterType="kr.or.GKBM.week.WeekDTO"
		resultType="kr.or.GKBM.week.WeekDTO">
		SELECT RNUM, c_i, c_n, c_k, c_c, c_w, c_y
		FROM ( SELECT ROWNUM AS
		RNUM,
		c_i, c_n, c_k, c_c, c_w, c_y
		FROM ( SELECT PW.WEEK_PLAN_ID AS
		c_i, PS.SKU_NAME
		AS c_n, PS.SKU_CODE AS c_k,
		PW.PLAN_COUNT AS c_c, PW.WEEK AS c_w,
		PW.PLAN_YEAR AS c_y
		FROM P_WEEK_PLAN PW
		LEFT JOIN P_SKU PS ON PW.SKU_ID = PS.SKU_ID
		<where>
			<if test="c_i != null and c_i != ''">
				AND WEEK_PLAN_ID = #{c_i}
			</if>
			<if test="c_n != null and c_n != ''">
				AND UPPER(SKU_NAME) LIKE '%' || UPPER(#{c_n}) || '%'
			</if>
			<if test="c_k != null and c_k != ''">
				AND UPPER(SKU_CODE) LIKE '%' || UPPER(#{c_k}) || '%'
			</if>
			<if test="c_c != null and c_c != ''">
				AND PLAN_COUNT = #{c_c}
			</if>
			<if test="c_w != null and c_w != ''">
				AND UPPER(WEEK) = #{c_w}
			</if>
			<if test="c_y != null and c_y != ''">
				AND PLAN_YEAR = #{c_y}
			</if>
		</where>

		ORDER BY VENDOR_NAME))
		WHERE RNUM <![CDATA[ >= ]]>
		${indexStart}
		AND RNUM <![CDATA[ <= ]]>
		${indexEnd}
	</select>
	
	<insert id="insertWeek_1"
		parameterType="kr.or.GKBM.week.WeekDTO">

		INSERT INTO P_WEEK_PLAN
		VALUES(SEQ.NEXTVAL, #{c_y}, #{c_w}, #{c_d}, #{c_s}, #{c_c})

	</insert>

	<delete id="deleteWeek_1"
		parameterType="kr.or.GKBM.week.WeekDTO">

		DELETE FROM P_WEEK_PLAN
		WHERE WEEK_PLAN_ID IN
		<foreach item="delete" collection="check" open="(" close=")"
			separator=",">
			#{delete}
		</foreach>

	</delete>

	<update id="updateWeek_1"
		parameterType="kr.or.GKBM.week.WeekDTO">

		UPDATE P_WEEK_PLAN
		SET WEEK_PLAN_ID = #{c_i},
		PLAN_YEAR = #{c_y},
		WEEK = #{c_w},
		PLAN_DATE = #{c_d},
		SKU_ID = #{c_s},
		PLAN_COUNT = #{c_c}
		WHERE WEEK_PLAN_ID = #{c_i}

	</update>
	
	<!-- Work 상품 조회 -->	
	
	<select id="code_select" resultType="kr.or.GKBM.work.WorkDTO">
		SELECT PLAN_YEAR AS c_y,
		WEEK AS c_w
		FROM P_WEEK_PLAN
		GROUP BY PLAN_YEAR, WEEK
	</select>
	
	<select id="detail_select" parameterType="kr.or.GKBM.work.WorkDTO" 
		resultType="kr.or.GKBM.work.WorkDTO">
		select pW.work_order_id as wi, pW.modify_date, pp.week_plan_id as c_pn, 
		ps.sku_name as c_n, PS.SKU_CODE as c_c, pp.plan_count as c_cc, pW.quantity as q, 
		PB.bom_id as c_b, pp.plan_year as c_y, pp.week as c_w, SPW.QSUM as c_s 
		from P_WEEK_PLAN PP
		join P_SKU PS ON PP.SKU_ID = PS.SKU_ID
		left join P_BOM PB ON PS.SKU_ID = PB.SKU_ID
		left join P_WORK_ORDER PW ON PP.WEEK_PLAN_ID = PW.WEEK_PLAN_ID
		LEFT JOIN (SELECT SUM(QUANTITY) AS QSUM, WEEK_PLAN_ID FROM P_WORK_ORDER GROUP BY WEEK_PLAN_ID) SPW ON PP.WEEK_PLAN_ID = SPW.WEEK_PLAN_ID
		<where>
			<if test="c_y != null and c_y != ''">
				AND PP.plan_year = #{c_y}
			</if>
			<if test="c_w != null and c_w != ''">
				AND PP.WEEK = #{c_w}
			</if>
			<if test="c_n != null and c_n != ''">
				AND ps.sku_name = #{c_n}
			</if>
			<if test="c_pn != null and c_pn != ''">
				AND pp.week_plan_id = #{c_pn}
			</if>
		</where>
		GROUP BY
		pW.work_order_id,
    	pW.modify_date,
    	pp.week_plan_id,
    	ps.sku_name,
    	ps.sku_code,
    	pp.plan_count,
    	pW.quantity,
    	pB.bom_id,
    	pp.plan_year,
    	pp.week,
    	SPW.QSUM
	</select>
	
	<select id="select" parameterType="kr.or.GKBM.work.WorkDTO" 
		resultType="kr.or.GKBM.work.WorkDTO">
		select pW.work_order_id as wi, pW.modify_date, pp.week_plan_id as c_pn, 
		ps.sku_name as c_n, PS.SKU_CODE as c_c, pp.plan_count as c_cc, pW.quantity as q, 
		PB.bom_id as c_b, pp.plan_year as c_y, pp.week as c_w, SPW.QSUM as c_s, PW.COMPL
		from P_WEEK_PLAN PP
		join P_SKU PS ON PP.SKU_ID = PS.SKU_ID
		left join P_BOM PB ON PS.SKU_ID = PB.SKU_ID
		left join P_WORK_ORDER PW ON PP.WEEK_PLAN_ID = PW.WEEK_PLAN_ID
		LEFT JOIN (SELECT SUM(QUANTITY) AS QSUM, WEEK_PLAN_ID FROM P_WORK_ORDER GROUP BY WEEK_PLAN_ID) SPW ON PP.WEEK_PLAN_ID = SPW.WEEK_PLAN_ID
		WHERE pW.work_order_id IS NOT NULL
		GROUP BY
		pW.work_order_id,
    	pW.modify_date,
    	pp.week_plan_id,
    	ps.sku_name,
    	ps.sku_code,
    	pp.plan_count,
    	pW.quantity,
    	pB.bom_id,
    	pp.plan_year,
    	pp.week,
    	SPW.QSUM,
    	PW.COMPL
	</select>
	
	<insert id="insertWork" parameterType="kr.or.GKBM.work.WorkDTO">

		INSERT INTO P_WORK_ORDER (WORK_ORDER_ID, WEEK_PLAN_ID, MODIFY_DATE, QUANTITY, BOM_ID)
		VALUES(SEQ.NEXTVAL, #{c_pn}, SYSDATE, #{c_d}, #{c_b})

	</insert>

	<!-- Defect 삽입 -->	
	
	<insert id="insertDefect" parameterType="kr.or.GKBM.defect.DefectDTO">

		INSERT INTO P_DEFECT
		VALUES(SYSDATE, #{un}, #{wi}, SEQ.NEXTVAL)

	</insert>
	
	<!-- WORK ID 수정 -->	
	
	<update id="defectUpdate"
		parameterType="kr.or.GKBM.defect.DefectDTO">

		UPDATE P_WORK_ORDER
		SET COMPL = 'Y'
		WHERE WORK_ORDER_ID = #{wi}

	</update>
	
	

	<!-- 이주희 -->
	<!-- 상품정보관리 페이징된 목록 -->
	<select id="fulltable_2" parameterType="skuDTO"
		resultType="skuDTO">
		SELECT * FROM ( SELECT p.*, ROW_NUMBER() OVER (ORDER BY sku_id DESC)
		AS rn FROM p_sku p
		<where>
			<if test="sku_code != null and sku_code != ''"> AND upper(sku_code) like upper('%' || #{sku_code} ||
				'%') </if>
		</where>
		) WHERE rn BETWEEN #{startRow} AND #{endRow}
	</select>
	<!-- 상품정보관리 조건에 맞는 전체 데이터 수 가져오기 -->
	<select id="Count_2" parameterType="skuDTO" resultType="int">
		SELECT COUNT(*) FROM p_sku
		<where>
			<if test="sku_code != null and sku_code != ''"> AND upper(sku_code) like upper('%' || #{sku_code} ||
				'%') </if>
		</where>
	</select>
	<!-- 상품정보관리 등록 -->
	<insert id="addition_2" parameterType="skuDTO"> insert into p_sku VALUES
		(#{sku_id}, #{sku_code}, #{sku_name}, #{sku_size}, #{vendor_name},
		#{price}, SYSDATE, #{modify_date}, #{sku_category}) </insert>
	<!-- 상품정보관리 삭제 -->
	<delete id="delete_2" parameterType="skuDTO"> delete from p_sku where
		sku_id = #{sku_id} </delete>
	<!-- 상품정보관리 수정 -->
	<update id="udpate_2" parameterType="skuDTO"> update p_sku set sku_code =
		#{sku_code}, sku_name = #{sku_name}, sku_size = #{sku_size},
		vendor_name = #{vendor_name}, price = #{price}, modify_date = SYSDATE,
		sku_category = #{sku_category} where sku_id = #{sku_id} </update>
	<!-- 원자재입고관리 -->
	<!-- 전체조회 -->
	<!-- <select id="fulltable_2_1" resultType="mioDTO" parameterType="mioDTO"> 
		SELECT pmio.*, ps.sku_code, ps.sku_name, ps.sku_size FROM P_MATERIAL_IN_OUT 
		pmio LEFT JOIN P_SKU ps ON pmio.sku_id = ps.sku_id WHERE pmio.sku_type = 
		'In' </select> -->
	<!-- 원자재입고 페이징된 목록 -->
	<select id="fulltable_2_1" parameterType="mioDTO"
		resultType="mioDTO">
		SELECT * FROM ( SELECT pmio.*, ps.sku_code, ps.sku_name, ps.sku_size,
		ROW_NUMBER() OVER (ORDER BY pmio.ib_id DESC) AS rn FROM
		P_MATERIAL_IN_OUT pmio LEFT JOIN P_SKU ps ON pmio.sku_id = ps.sku_id
		<!-- WHERE pmio.sku_type = 'In' -->
		<where>
			pmio.sku_type = 'In'
			<if test="sku_code != null and sku_code != ''"> AND upper(ps.sku_code) like upper('%' || #{sku_code} ||
				'%') </if>
		</where>
		) WHERE rn BETWEEN #{startRow} AND #{endRow}
	</select>
	<!-- 원자재입고관리 전체 데이터 수 조회 -->
	<select id="Count_2_1" parameterType="mioDTO" resultType="int">
		SELECT COUNT(*) FROM P_MATERIAL_IN_OUT pmio LEFT JOIN P_SKU ps ON
		pmio.sku_id = ps.sku_id
		<!-- WHERE pmio.sku_type = 'In' -->
		<where>
			pmio.sku_type = 'In'
			<if test="sku_code != null and sku_code != ''"> AND upper(ps.sku_code) like upper('%' || #{sku_code} ||
				'%') </if>
		</where>
	</select>
	<!-- 원자재입고관리 등록 -->
	<insert id="addition_2_1" parameterType="mioDTO"> insert into
		p_material_in_out VALUES (#{ib_id}, #{material_count},
		#{material_price}, #{sku_type}, SYSDATE, #{modify_date}, #{remarks},
		#{sku_id}, #{bill_id}) </insert>
	<!-- 원자재입고관리 삭제 -->
	<delete id="delete_2_1" parameterType="mioDTO"> delete from
		p_material_in_out where ib_id = #{ib_id} </delete>


	<!-- ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ 이준규 ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ -->


	<!-- 로그인 정보 전체조회 -->

	<select id="selectEmp_3" resultType="kr.or.GKBM.Login.LoginDTO">
		select * from p_emp
	</select>

	<!-- 설비등록 전체조회 and 검색 -->
	<select id="selectP_equipreg"
		resultType="kr.or.GKBM.p_equipreg.equipregDTO" parameterType="map">
		SELECT * FROM p_facility
		where
		upper(facility_code) like upper('%' || #{facility_code} || '%')
		or
		upper(facility_name) like upper('%' || #{facility_name} || '%')
	</select>


	<!-- 설비등록 DB에 추가 -->
	<insert id="insertP_eq"
		parameterType="kr.or.GKBM.p_equipreg.equipregDTO">
		insert into p_facility
		values
		(#{facility_code},
		#{facility_manager},
		#{installation_date},
		#{facility_name},
		#{facility_location},
		#{inspection_cycle},
		#{remarks})
	</insert>

	<!-- 설비등록 삭제 -->
	<delete id="deleteP_eq3"
		parameterType="kr.or.GKBM.p_equipreg.equipregDTO">
		delete from p_facility
		where
		facility_code = #{facility_code}
	</delete>

	<!-- 설비등록 수정 -->
	<update id="updateP_eq3"
		parameterType="kr.or.GKBM.p_equipreg.equipregDTO">
		update p_facility
		set
		facility_manager = #{facility_manager},
		installation_date = #{installation_date},
		facility_name = #{facility_name},
		facility_location = #{facility_location},
		inspection_cycle =
		#{inspection_cycle},
		remarks = #{remarks}
		where facility_code = #{facility_code}
	</update>


	<!--        @@@@@@@@@@@@김도희@@@@@@@@@@@@@           -->

	<select id="getBoardDetail" resultType="boardDTO"
		parameterType="boardDTO">

		select * from p_board
		where board_id = #{board_id}
	</select>


	<update id="udpateBoard" parameterType="boardDTO">

		update p_board
		set title =
		#{title},
		board_content = #{board_content},
		notice =
		#{notice},
		reserve_date = sysdate
		where board_id = #{board_id}
	</update>


	<insert id="insertBoard" parameterType="boardDTO">
	  	<selectKey keyProperty="board_id" resultType="int" order="BEFORE">
   		 SELECT board_id_seq.NEXTVAL FROM dual
  		</selectKey>
	
		insert into p_board
		(board_id, empno, title, board_content, notice, create_date,
		reserve_date, views)
		VALUES (
		#{board_id},
		#{empno},
		#{title},
		#{board_content},
		#{notice},
		sysdate, null, 0)
	</insert>


	<delete id="deleteBoard" parameterType="boardDTO">

		delete from p_board
		where
		board_id = #{board_id}
	</delete>


	<update id="viewsUpdateBoard" parameterType="boardDTO">

		update p_board
		set
		views = (
		select views+1 from p_board
		where board_id = #{board_id}
		)
		where board_id = #{board_id}
	</update>


	<select id="selectPageBoard" resultType="boardDTO">
		select *
		from (select rownum as rnum, inner_table.*
		from (select * from
		p_board
		order by board_id
		) inner_table
		)
	<![CDATA[
		where rnum >= #{indexStart} and rnum <= #{indexEnd}
	]]>
	</select>

	<select id="totalBoardPage" resultType="int">
		select count (*) from
		p_board
	</select>

	<select id="searchPageBoard" resultType="boardDTO"
		parameterType="boardDTO">
		select *
		from (select rownum as rnum, inner_table.*
		from (select * from p_board

		<where>
			<choose>
				<when
					test="type == 'empno' and  (keyword != '' and keyword != null)">
					and empno = #{empno}
				</when>
				<when
					test="type == 'title' and  (keyword != '' and keyword != null)">
					and title like '%' || #{title} || '%'
				</when>
				<when
					test="type == 'board_content' and  (keyword != '' and keyword != null)">
					and board_content like '%' || #{board_content} || '%'
				</when>
			</choose>

			<!-- 추후 String으로 수정 시, 해당 sql문 사용 and upper(empno) like upper('%' || #{ename} 
				|| '%') -->
		</where>
		order by board_id asc
		) inner_table
		)
	<![CDATA[
		where rnum >= #{indexStart} and rnum <= #{indexEnd}
	]]>
	</select>
	
	<insert id="uploadBoardFile" parameterType="boardFileDTO">
		insert into p_board_file
		(file_id, board_id, file_name, file_path, upload_date)
		values (
		board_file_seq.NEXTVAL,
		#{board_id},
		#{file_name},
		#{file_path},
		sysdate
		)
	</insert>


	<delete id="deleteFileByFileId" parameterType="boardFileDTO">
		delete from p_board_file
		where file_id = #{file_id}
	</delete>
	
	
	<select id="getFileById" parameterType="Integer" resultType="boardFileDTO">
		select *
		from p_board_file 
		where board_id = #{board_id}
	</select>

	<insert id="insertComment" parameterType="commentDTO">
		insert into p_comment
		(comment_id, empno, board_id, content, create_date,
		parent_id, depth, is_deleted)
		values(
			board_comment_seq.NEXTVAL,
			#{empno},
			#{board_id},
			#{content},
			sysdate,
			#{parent_id},
			#{depth},
			0)
	</insert>
	
	<update id="updateComment" parameterType="commentDTO">
		update p_comment set content = #{content}
		where comment_id = #{comment_id}
	</update>
	
	<update id="deleteComment" parameterType="commentDTO">
		update p_comment set is_deleted = 1
		where comment_id = #{comment_id}
	</update>
	
	<select id="checkCommentchildren" parameterType="commentDTO">
		select count(*) from p_comment
		where parent_id = #{comment_id}
	</select>
	
	<select id="selectComment" parameterType="Integer" resultType="commentDTO">
	
	</select>


</mapper>