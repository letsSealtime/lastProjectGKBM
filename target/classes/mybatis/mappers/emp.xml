<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gkbm.emp">

	<!-- 최수완 -->

	<!-- VENDOR 전체 조회 -->
	<select id="selectVendorAll_1"
		resultType="kr.or.GKBM.vendor.VendorDTO">

		SELECT COUNT(*) AS line
		FROM P_VENDOR

	</select>

	<!-- 페이징 전체 조회 -->
	<select id="selectVendor_All_1"
		parameterType="kr.or.GKBM.vendor.VendorDTO"
		resultType="kr.or.GKBM.vendor.VendorDTO">

		SELECT RNUM, c_c, c_n, c_m, c_p, c_a, c_i
		FROM ( SELECT ROWNUM AS
		RNUM,
		c_c, c_n, c_m, c_p, c_a, c_i
		FROM ( SELECT VENDOR_ID AS
		c_c, VENDOR_NAME
		AS c_n, MGR AS c_m,
		VENDOR_PHONE AS c_p, EMAIL AS c_a,
		SKU_ID AS c_i
		FROM P_VENDOR
		ORDER BY c_n))
		WHERE RNUM <![CDATA[ >= ]]>
		${indexStart} AND RNUM <![CDATA[ <= ]]>
		${indexEnd}

	</select>

	<!-- VENDOR 부분 조회 -->
	<select id="selectVendorPart_1"
		parameterType="kr.or.GKBM.vendor.VendorDTO"
		resultType="kr.or.GKBM.vendor.VendorDTO">
		SELECT COUNT(*) AS line
		FROM P_VENDOR
		<where>
			<if test="c_c != null and c_c != ''">
				AND VENDOR_ID = #{c_c}
			</if>
			<if test="c_n != null and c_n != ''">
				AND UPPER(VENDOR_NAME) LIKE '%' || UPPER(#{c_n}) || '%'
			</if>
			<if test="c_m != null and c_m != ''">
				AND UPPER(MGR) LIKE '%' || UPPER(#{c_m}) || '%'
			</if>
			<if test="c_p != null and c_p != ''">
				AND VENDOR_PHONE = #{c_p}
			</if>
			<if test="c_a != null and c_a != ''">
				AND UPPER(EMAIL) LIKE '%' || UPPER(#{c_a}) || '%'
			</if>
			<if test="c_i != null and c_i != ''">
				AND SKU_ID = #{c_i}
			</if>
		</where>

	</select>

	<!-- 페이징 부분 조회 -->
	<select id="selectVendor_Part_1"
		parameterType="kr.or.GKBM.vendor.VendorDTO"
		resultType="kr.or.GKBM.vendor.VendorDTO">
		SELECT RNUM, c_c, c_n, c_m, c_p, c_a, c_i
		FROM (
		SELECT ROWNUM AS RNUM,
		c_c, c_n, c_m, c_p, c_a, c_i
		FROM (
		SELECT
		VENDOR_ID AS c_c,
		VENDOR_NAME
		AS c_n,
		MGR AS c_m,
		VENDOR_PHONE AS c_p,
		EMAIL AS c_a,
		SKU_ID AS c_i
		FROM
		P_VENDOR
		<where>
			<if test="c_c != null and c_c != ''">
				AND VENDOR_ID = #{c_c}
			</if>
			<if test="c_n != null and c_n != ''">
				AND UPPER(VENDOR_NAME) LIKE '%' || UPPER(#{c_n}) || '%'
			</if>
			<if test="c_m != null and c_m != ''">
				AND UPPER(MGR) LIKE '%' || UPPER(#{c_m}) || '%'
			</if>
			<if test="c_p != null and c_p != ''">
				AND VENDOR_PHONE = #{c_p}
			</if>
			<if test="c_a != null and c_a != ''">
				AND UPPER(EMAIL) LIKE '%' || UPPER(#{c_a}) || '%'
			</if>
			<if test="c_i != null and c_i != ''">
				AND SKU_ID = #{c_i}
			</if>
		</where>

		ORDER BY VENDOR_NAME))
		WHERE RNUM <![CDATA[ >= ]]>
		${indexStart}
		AND RNUM <![CDATA[ <= ]]>
		${indexEnd}
	</select>

	<!-- 데이터 기입 -->

	<insert id="insertVendor_1"
		parameterType="kr.or.GKBM.vendor.VendorDTO">

		INSERT INTO P_VENDOR
		VALUES(SEQ.NEXTVAL, #{c_n}, #{c_m},
		#{c_p}, #{c_a}, #{c_i})

	</insert>

	<delete id="deleteVendor_1"
		parameterType="kr.or.GKBM.vendor.VendorDTO">

		DELETE FROM P_VENDOR
		WHERE VENDOR_ID IN
		<foreach item="delete" collection="check" open="(" close=")"
			separator=",">
			#{delete}
		</foreach>

	</delete>

	<update id="updateVendor_1"
		parameterType="kr.or.GKBM.vendor.VendorDTO">

		UPDATE P_VENDOR
		SET VENDOR_NAME = #{c_n},
		MGR = #{c_m},
		VENDOR_PHONE = #{c_p},
		EMAIL = #{c_a},
		SKU_ID = #{c_i}
		WHERE VENDOR_ID = #{c_c}

	</update>
	
	<!-- BILL 전체 조회 -->
	<select id="selectBillAll_1"
		resultType="kr.or.GKBM.bill.BillDTO">

		SELECT COUNT(*) AS line
		FROM P_VENDOR

	</select>

	<!-- 페이징 전체 조회 -->
	<select id="selectBill_All_1"
		parameterType="kr.or.GKBM.bill.BillDTO"
		resultType="kr.or.GKBM.bill.BillDTO">

		SELECT RNUM, c_c, c_n, c_m, c_p, c_a, c_i
		FROM ( SELECT ROWNUM AS
		RNUM,
		c_c, c_n, c_m, c_p, c_a, c_i
		FROM ( SELECT VENDOR_ID AS
		c_c, VENDOR_NAME
		AS c_n, MGR AS c_m,
		VENDOR_PHONE AS c_p, EMAIL AS c_a,
		SKU_ID AS c_i
		FROM P_VENDOR
		ORDER BY c_n))
		WHERE RNUM <![CDATA[ >= ]]>
		${indexStart} AND RNUM <![CDATA[ <= ]]>
		${indexEnd}

	</select>

	<!-- BILL 부분 조회 -->
	<select id="selectBillPart_1"
		parameterType="kr.or.GKBM.bill.BillDTO"
		resultType="kr.or.GKBM.bill.BillDTO">
		SELECT COUNT(*) AS line
		FROM P_VENDOR
		<where>
			<if test="c_c != null and c_c != ''">
				AND VENDOR_ID = #{c_c}
			</if>
			<if test="c_n != null and c_n != ''">
				AND UPPER(VENDOR_NAME) LIKE '%' || UPPER(#{c_n}) || '%'
			</if>
			<if test="c_m != null and c_m != ''">
				AND UPPER(MGR) LIKE '%' || UPPER(#{c_m}) || '%'
			</if>
			<if test="c_p != null and c_p != ''">
				AND VENDOR_PHONE = #{c_p}
			</if>
			<if test="c_a != null and c_a != ''">
				AND UPPER(EMAIL) LIKE '%' || UPPER(#{c_a}) || '%'
			</if>
			<if test="c_i != null and c_i != ''">
				AND SKU_ID = #{c_i}
			</if>
		</where>

	</select>

	<!-- 페이징 부분 조회 -->
	<select id="selectBill_Part_1"
		parameterType="kr.or.GKBM.bill.BillDTO"
		resultType="kr.or.GKBM.bill.BillDTO">
		SELECT RNUM, c_c, c_n, c_m, c_p, c_a, c_i
		FROM (
		SELECT ROWNUM AS RNUM,
		c_c, c_n, c_m, c_p, c_a, c_i
		FROM (
		SELECT
		VENDOR_ID AS c_c,
		VENDOR_NAME
		AS c_n,
		MGR AS c_m,
		VENDOR_PHONE AS c_p,
		EMAIL AS c_a,
		SKU_ID AS c_i
		FROM
		P_VENDOR
		<where>
			<if test="c_c != null and c_c != ''">
				AND VENDOR_ID = #{c_c}
			</if>
			<if test="c_n != null and c_n != ''">
				AND UPPER(VENDOR_NAME) LIKE '%' || UPPER(#{c_n}) || '%'
			</if>
			<if test="c_m != null and c_m != ''">
				AND UPPER(MGR) LIKE '%' || UPPER(#{c_m}) || '%'
			</if>
			<if test="c_p != null and c_p != ''">
				AND VENDOR_PHONE = #{c_p}
			</if>
			<if test="c_a != null and c_a != ''">
				AND UPPER(EMAIL) LIKE '%' || UPPER(#{c_a}) || '%'
			</if>
			<if test="c_i != null and c_i != ''">
				AND SKU_ID = #{c_i}
			</if>
		</where>

		ORDER BY VENDOR_NAME))
		WHERE RNUM <![CDATA[ >= ]]>
		${indexStart}
		AND RNUM <![CDATA[ <= ]]>
		${indexEnd}
	</select>

	<!-- 데이터 기입 -->

	<insert id="insertBill_1"
		parameterType="kr.or.GKBM.bill.BillDTO">

		INSERT INTO P_VENDOR
		VALUES(SEQ.NEXTVAL, #{c_n}, #{c_m},
		#{c_p}, #{c_a}, #{c_i})

	</insert>

	<delete id="deleteBill_1"
		parameterType="kr.or.GKBM.bill.BillDTO">

		DELETE FROM P_VENDOR
		WHERE VENDOR_ID IN
		<foreach item="delete" collection="check" open="(" close=")"
			separator=",">
			#{delete}
		</foreach>

	</delete>

	<update id="updateBill_1"
		parameterType="kr.or.GKBM.bill.BillDTO">

		UPDATE P_VENDOR
		SET VENDOR_NAME = #{c_n},
		MGR = #{c_m},
		VENDOR_PHONE = #{c_p},
		EMAIL = #{c_a},
		SKU_ID = #{c_i}
		WHERE VENDOR_ID = #{c_c}

	</update>

	<!-- 이주희 -->
	<!-- 전체조회하기 -->
	<select id="selectEmp_2" resultType="kr.or.GKBM.sku.P_skuDTO">
		select * from p_sku
	</select>

	<!-- 등록 -->
	<insert id="addition_2" parameterType="skuDTO">
		insert into p_sku
		VALUES
		(#{sku_id},
		#{sku_code},
		#{sku_name},
		#{sku_size},
		#{vendor_name},
		#{price},
		SYSDATE,
		#{modify_date},
		#{sku_category})
	</insert>

	<!-- 삭제 -->
	<delete id="delete_2" parameterType="skuDTO">

		delete from p_sku where
		sku_id = #{sku_id}

	</delete>

	<!-- 내가 원하는것 조회 -->
	<select id="selectBySkuId_2" parameterType="skuDTO"
		resultType="skuDTO">
		SELECT * FROM p_sku WHERE sku_code = #{sku_code}
	</select>


	<!-- ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ 이준규 ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ -->


	<!-- 로그인 정보 전체조회 -->
	
	<select id="selectEmp_3" resultType="kr.or.GKBM.Login.LoginDTO">
		select * from p_emp
	</select>
	
	<!-- 설비등록 전체조회 and 검색 -->
	<select id="selectP_equipreg" resultType="kr.or.GKBM.p_equipreg.equipregDTO" parameterType="map">
    	SELECT * FROM p_facility
    		where 
    		upper(facility_code) like upper('%' || #{facility_code} || '%') 
    		or 
    		upper(facility_name) like upper('%' || #{facility_name} || '%')
	</select>

	
	<!-- 설비등록 DB에 추가 -->
	<insert id="insertP_eq" parameterType="kr.or.GKBM.p_equipreg.equipregDTO">
		insert into p_facility
		values 
		(#{facility_code},
		 #{facility_manager},
		 #{installation_date},
		 #{facility_name},
		 #{facility_location},
		 #{inspection_cycle},
		 #{remarks})
	</insert>

	<!-- 설비등록 삭제 -->
	<delete id="deleteP_eq3" parameterType="kr.or.GKBM.p_equipreg.equipregDTO">
		delete from p_facility
		where 
		facility_code = #{facility_code}
	</delete>
	
	<!-- 설비등록 수정 -->
	<update id="updateP_eq3" parameterType="kr.or.GKBM.p_equipreg.equipregDTO">
		update p_facility
		set 
		facility_manager = #{facility_manager}, 
		installation_date = #{installation_date},
		facility_name = #{facility_name},    
		facility_location = #{facility_location},
		inspection_cycle = #{inspection_cycle}, 
		remarks = #{remarks}
		where facility_code = #{facility_code}    
	</update>
	

	<!-- 김도희 -->

	<select id="getBoardDetail" resultType="boardDTO"
		parameterType="boardDTO">

		select * from p_board
		where board_id = #{board_id}

	</select>

	<update id="udpateBoard" parameterType="boardDTO">

		update p_board
		set title = #{title},
		board_content = #{board_content},
		notice =
		#{notice},
		reserve_date = sysdate
		where board_id = #{board_id}
	</update>

	<select id="insertBoard" parameterType="boardDTO">

		insert into p_board
		(board_id, empno, title, board_content, notice, create_date,
		reserve_date, views)
		VALUES (
		board_id_seq.NEXTVAL,
		#{empno},
		#{title},
		#{board_content},
		#{notice},
		sysdate, null, 0)
	</select>

	<delete id="deleteBoard" parameterType="boardDTO">

		delete from p_board
		where
		board_id = #{board_id}
	</delete>

	<update id="viewsUpdateBoard" parameterType="boardDTO">

		update p_board
		set views = (
		select views+1 from p_board
		where board_id = #{board_id}
		)
		where board_id = #{board_id}
	</update>

	<select id="selectPageBoard" resultType="boardDTO">
		select *
		from (select rownum as rnum, inner_table.*
		from (select * from p_board
			order by board_id
			) inner_table
		)
	<![CDATA[
		where rnum >= #{indexStart} and rnum <= #{indexEnd}
	]]>
	</select>

	<select id="totalBoardPage" resultType="int">
		select count (*) from p_board
	</select>

	<select id="searchPageBoard" resultType="boardDTO"
		parameterType="boardDTO">
		select *
		from (select rownum as rnum, inner_table.*
			from (select * from p_board

		<where>
			<choose>
				<when
					test="type == 'empno' and  (keyword != '' and keyword != null)">
					and empno = #{empno}
				</when>
				<when
					test="type == 'title' and  (keyword != '' and keyword != null)">
					and title like '%' || #{title} || '%'
				</when>
				<when
					test="type == 'board_content' and  (keyword != '' and keyword != null)">
					and board_content like '%' || #{board_content} || '%'
				</when>
			</choose>

			<!-- 추후 String으로 수정 시, 해당 sql문 사용 and upper(empno) like upper('%' || #{ename} 
				|| '%') -->
		</where>
		order by board_id asc
		) inner_table
		)
	<![CDATA[
		where rnum >= #{indexStart} and rnum <= #{indexEnd}
	]]>
	</select>


</mapper>